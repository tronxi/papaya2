mod SEMANTICS is
    pr META-LEVEL .
    inc STD-STREAM .
    pr COMMAND-SIGN .
    pr MEMORY-STACK .
    pr PROCESS-MODULE .
    pr ASSIGNMENT .

    subsort @Program@ < Attribute .

    op Program : -> Cid [ctor] .
    op program : -> Oid [ctor] .
    
    op input:_ : TermList -> Attribute [ctor format (n nt d)] .
    op memory:_ : MemoryStack -> Attribute [ctor format (n nt d)] .
    op module:_ : FModule -> Attribute [ctor format (n nt d)] .

    vars T T' T'' : TermList .
    vars MS MS' : MemoryStack .
    var Ats : AttributeSet .
    var FM : FModule .

    crl [declare] :
        < program : Program | input: ('__['declare:_;['token[T]], T']), memory: MS , module: FM ,  Ats >
        =>
        < program : Program | input: T', memory: MS' , module: FM, Ats > 
    if MS' := declare(MS, T) .

    crl [assign] :
        < program : Program | input: ('__['_=_;['token[T], T'], T'']), memory: MS , module: FM , Ats > 
        =>
        < program : Program | input: T'', memory: MS' , module: FM , Ats > 
    if MS' := assign(MS, T, T') .

    crl [declareAndAssign] :
        < program : Program | input: ('__['declare:_=_;['token[T],T'],T'']), memory: MS , module: FM , Ats > 
        =>
        < program : Program | input: T'', memory: MS', module: FM , Ats > 
    if MS' := declareAndAssign(MS, T, T') .
endm